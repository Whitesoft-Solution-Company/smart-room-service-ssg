---
import Layout from "../../../../layouts/Layout.astro";
import SingleBlogItem from "../../../../components/blog/SingleBlogItem.astro";
export const prerender = true;

interface Blog extends BlogLocalization {
  localizations: BlogLocalization[];
}
interface BlogLocalization {
  locale: string;
  slug: string | null;
  [key: string]: any;
}
// Fetch a single blog post based on the slug
export async function getStaticPaths() {
  const API_BASE_URL = "https://service.ananyalipe.com";
  const url = `${API_BASE_URL}/api/blogs?populate[localizations][populate]=*`;

  const response = await fetch(url);
  if (!response.ok) {
    console.error(`Error: ${response.status} ${response.statusText}`);
    return [];
  }

  try {
    const data = await response.json();
    const paths = data.data.flatMap((blog: Blog) => {
      const localizedPaths = blog.localizations
        .filter((loc) => typeof loc.slug === "string" && loc.slug.length > 0)
        .map((localization) => ({
          params: {
            locale: localization.locale,
            slug: localization.slug,
          },
          props: { blog: localization },
        }));

      const mainPath =
        typeof blog.slug === "string" && blog.slug.length > 0
          ? [
              {
                params: {
                  locale: blog.locale,
                  slug: blog.slug,
                },
                props: { blog },
              },
            ]
          : [];

      return [...mainPath, ...localizedPaths];
    });

    return paths;
  } catch (error) {
    console.error("Error parsing JSON:", error);
    return [];
  }
}

const { blog } = Astro.props;
---

<Layout title="Blog">
  <SingleBlogItem blog={blog} />
</Layout>
